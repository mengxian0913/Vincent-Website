<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>https://vincent-s-blog.web.app/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us, zh-TW, zh</language>
    <lastBuildDate>Mon, 11 Sep 2023 15:42:56 +0800</lastBuildDate><atom:link href="https://vincent-s-blog.web.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>從零開始 selenium 01</title>
      <link>https://vincent-s-blog.web.app/posts/python/selenium_01/</link>
      <pubDate>Mon, 11 Sep 2023 15:42:56 +0800</pubDate>
      
      <guid>https://vincent-s-blog.web.app/posts/python/selenium_01/</guid>
      <description>前言 注意事項：以下範例皆為 os 環境下實作
使用 selenium 實作爬蟲有什麼好處呢？ selenium 是一個可以模擬人類操作網頁的爬蟲工具，可以在網頁中自在地穿梭。 並且，實作起來會比 Beautifulsoup 來的直觀，簡單。
本篇文章會依序帶著大家認識 selenium
Selenium 安裝 使用python pip 下載
pip install selenium Webdriver 下載 brew install --cask google-drive 快速開始 引入函式 from selenium import webdriver 開啟瀏覽器 driver = webdriver.Chrome() 取得目標網站資源 url = &amp;#39;https://example.com/&amp;#39; driver.get(url) 取得目標網站資訊 title = driver.title 定位元素 from selenium.webdriver.common.by import By 網頁資料定位元素 說明 find_element(s)(By.ID, &amp;lsquo;&amp;rsquo;) 使用 id 屬性定位 find_element(s)(By.NAME, &amp;lsquo;&amp;rsquo;) 使用 name 屬性定位 find_element(s)(By.TAG_NAME, &amp;lsquo;&amp;rsquo;) 使用 tag_name 屬性定位 (div, span, input, button, etc.</description>
    </item>
    
    <item>
      <title>Fcu Class Grabbing Robot</title>
      <link>https://vincent-s-blog.web.app/projects/fcu-class-grabbing-robot/</link>
      <pubDate>Mon, 11 Sep 2023 15:29:49 +0800</pubDate>
      
      <guid>https://vincent-s-blog.web.app/projects/fcu-class-grabbing-robot/</guid>
      <description></description>
    </item>
    
    <item>
      <title>淺談 Python String .find() 函式</title>
      <link>https://vincent-s-blog.web.app/posts/python/stringmethod_01/</link>
      <pubDate>Mon, 04 Sep 2023 00:00:13 +0800</pubDate>
      
      <guid>https://vincent-s-blog.web.app/posts/python/stringmethod_01/</guid>
      <description>.find(val) 使用 find() 尋找第一個 val 出現的 index，如果沒有對應的值，回傳 -1
ss = &amp;#34;Hello World!\n&amp;#34; print(ss.find(&amp;#34;World&amp;#34;)) # 6 print(ss.find(&amp;#34;Apple&amp;#34;)) # -1 (如果沒有找到，回傳-1) .find(val, start, end) 在 find() 函數中提供了三個參數。 回傳 start 與 end 的閉區間尋找 val 出現的 index
ss = &amp;#34;Hello World!\n&amp;#34; print(ss.find(&amp;#34;World&amp;#34;, 6, 12)) # 6 print(ss.find(&amp;#34;World&amp;#34;, 6, 11)) # -1 (如果沒有找到，回傳-1) </description>
    </item>
    
    <item>
      <title>Jquery Attr 函式介紹</title>
      <link>https://vincent-s-blog.web.app/posts/jquery/attr/</link>
      <pubDate>Wed, 23 Aug 2023 18:03:33 +0800</pubDate>
      
      <guid>https://vincent-s-blog.web.app/posts/jquery/attr/</guid>
      <description>attr 是 jQuery 中的方法，用於獲取或設置元素的屬性值。attr 代表 &amp;ldquo;attribute&amp;rdquo;，即元素的屬性。這個方法允許您操作元素的 HTML 屬性，例如 class、id、href、src 等。
在 jQuery 中，attr() 方法有兩種使用方式：
獲取屬性值： 您可以使用 attr() 方法來獲取元素的特定屬性值。例如，$(element).attr(&amp;ldquo;class&amp;rdquo;) 將返回元素的 class 屬性值。 設置屬性值： 您可以使用 attr() 方法來設置元素的特定屬性值。例如，$(element).attr(&amp;ldquo;class&amp;rdquo;, &amp;ldquo;new-class&amp;rdquo;) 將把元素的 class 屬性值設置為 &amp;ldquo;new-class&amp;rdquo;。 // 獲取元素的 class 屬性值 const classValue = $(&amp;#34;element&amp;#34;).attr(&amp;#34;class&amp;#34;); // 設置元素的 class 屬性值 $(&amp;#34;element&amp;#34;).attr(&amp;#34;class&amp;#34;, &amp;#34;new-class&amp;#34;); // 獲取元素的 href 屬性值 const hrefValue = $(&amp;#34;a&amp;#34;).attr(&amp;#34;href&amp;#34;); // 設置元素的 src 屬性值 $(&amp;#34;img&amp;#34;).attr(&amp;#34;src&amp;#34;, &amp;#34;new-image.jpg&amp;#34;); </description>
    </item>
    
    <item>
      <title>2023 暑期人工智能交流</title>
      <link>https://vincent-s-blog.web.app/posts/else-tags/2023%E6%9A%91%E6%9C%9F%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%BA%A4%E6%B5%81/</link>
      <pubDate>Tue, 08 Aug 2023 23:02:15 +0800</pubDate>
      
      <guid>https://vincent-s-blog.web.app/posts/else-tags/2023%E6%9A%91%E6%9C%9F%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%BA%A4%E6%B5%81/</guid>
      <description>前言： 本次活動為 同濟大學、香港理工大學、澳門科技大學、世新大學、逢甲大學 等五校一同舉辦九天的人共智能交流活動。 此活動共有 109 為師生，並且總共有四種不同的課題。 其中包含： 智慧出行、人工智能倫理、跨海大橋、智慧城市
這九天會參訪許多內地知名的高科技產業，例如：深城交、優必選；如此之外，也到許多重點大學參訪，例如：香港理工大學、香港中文大學、澳門科技大學等等。
我是這次課程 智慧出行 課題的學生。
此篇文章主要分為三個部分： 1.活動經歷 2. 課程想法 3. 活動心得
活動經歷 參訪比亞迪 深圳的道路上大概有 8 ~ 9 成的汽車都是電動能源車，而這些車輛大多出廠於 比亞迪(BYD)。 在行程第一天我們參訪比亞迪，了解這間公司的技術，其中包含了電動車(EV)、混合 動力車(HEV)、刀片電池，以及能源系統等等。 除了新能源汽車製造外，比亞迪也幫許多知名手機品牌代工。
電動汽車（EV）：比亞迪是電動汽車領域的重要參與者之一。公司生產各種類型的電動車輛，包括乘用車、商用車和公交車。比亞迪在電動巴士製造方面取得了顯著成就，成為全球最大的電動巴士製造商之一。 混合動力汽車（HEV）：除了純電動車輛，比亞迪還製造混合動力汽車，將傳統內燃機與電動技術相結合，提高燃油效率和減少排放。 新能源技術：比亞迪在電池技術領域取得突破，開發鋰鐵磷酸鐵鋰電池等先進電池技術，用於驅動其電動車輛和儲能系統。 太陽能電池板：比亞迪也涉足太陽能電池板製造領域，生產用於太陽能發電系統的組件和設備。 儲能系統：公司還生產電池儲能系統，用於儲存和管理電力，支持電網平衡和可再生能源集成。 參訪優必選、深城交 深城交是一家專注於城市交通領域的國家級高新技術企業，提供城市交通整體解決方案，包括規劃、設計、整合、運營等服務。以下是深城交提供的幾項服務：
規劃諮詢：提供城市交通規劃、軌道交通規劃、道路交通規劃、公共交通規劃等等。 工程設計和檢測：提供道路工程設計、橋樑工程設計、隧道工程設計、軌道工程設計、機電工程設計等等。 大數據軟體及智慧交通：提供交通大數據平台、综合交通仿真平台、智慧停車平台、車路協同平台、智慧出行平台等專業軟體產品，以及智慧城市、智慧街區、智慧道路等專業系统集成方案，為客户提供數據驅動和智能化的解决方案。
優必選是一家中國的機器人製造商，核心技術如下：
動作程序程式設計：可以讓機器人學習和執行不同的動作 語音交互：可以讓機器人聽懂和回答語音指令，例如查詢天氣、時間、詩詞等 智能通話：可以讓機器人透過視頻和聲音與遠方的人聯繫 人臉識別：可以讓機器人辨認不同的人臉，並根據情況做出相應的反應 物體識別：可以讓機器人識別不同的物體，例如繪本、玩具等 圖形編程：可以讓機器人通過圖形化的界面進行編程，學習邏輯思維和創造力 國家基因庫 國家基因庫是一個專門收集和保存各種生物樣本和數據的機構。
保存、保護和合理利用基因資源，為國家安全和核心競爭力提供堅實基礎和有效保障。 建設成為引領我國生命科學和生物經濟發展的戰略性科技力量，支撐生命科學研究與生物產業創新發展的公益性、開放性、引領性、戰略性科技平台。 推動行業內的學術交流和樣本/數據資源共享，促進生命資源的科學合理應用，實現全球資源保護和戰略性應用。 為科研工作者、相關產業的從業者和普通民眾創造學術交流、人才培訓、科普教育的廣闊空間與寶貴機遇，提升領域內人才的理論與實踐能力，培養民眾的科學態度與科學精神。 香港立法會 參訪香港立法院，香港立法會 洪雯 議員合照。
課程想法 (對於全自動駕駛的想法) 本次課程中，老師給予同學們開放式的討論機會，就自動駕駛技術的可行性和實現方法進行了熱烈的交流。以下對不同組別的觀點進行簡要總結：
我們認為實現自動駕駛技術需要著重發展三大關鍵技術：
即時地圖資訊： 路線規劃： 在全自動駕駛中，我們提議利用高精度地圖來精確定位車輛所處車道，同時透過雲端計算規劃最佳路線。 道路規範： 不同道路有不同規則，如限速等。我們建議將這些道路規則存儲在雲端，車輛根據當前規範行駛。這樣做的優點是方便維護，但缺點是可能受到黑客攻擊。 車輛計算機系統： 在面對緊急或特殊情況（如前車急煞或障礙物）時，我們需要車輛內部的辨識系統和訓練良好的決策模型做出即時決策。車輛之間的溝通也至關重要。 統一計算規則：針對超車等情況，我們建議制定統一計算規則，以避免不同車輛制定矛盾決策。我們認為不同自動駕駛車輛應共享一套統一的計算機系統，以確保一致性且能互相溝通。 區塊鏈技術： 我們提出區塊鏈技術可用於減輕雲端計算的壓力。例如，將道路劃分為不同區塊（如 A、B、C、D），若在某區塊發生事故，僅需要在該區塊更新相關資訊，而不需將所有資訊返回雲端進行計算。車輛在行駛於該區塊時，能接收到相關訊息並做出適當決策。 我們相信，未來的自動駕駛技術將不僅僅是一種交通工具的變革，更是一場科技和創新的融合。通過我們共同的努力，我們有機會實現這些技術的突破和應用，為社會帶來更便捷、更安全的出行方式。</description>
    </item>
    
    <item>
      <title>計概作業 5 演算法十八般武藝</title>
      <link>https://vincent-s-blog.web.app/posts/algorithm/blog-test/</link>
      <pubDate>Tue, 08 Aug 2023 22:49:50 +0800</pubDate>
      
      <guid>https://vincent-s-blog.web.app/posts/algorithm/blog-test/</guid>
      <description>704. Binary Search 二分搜解法 $O(log_2n)$ 因為每次搜尋都會將資料切半，所以時間複雜度為 $O(log_{2}n)$
二分搜尋實作(左閉右閉)
將數據由小至大排序好 設定左界及右界 尋找中間(mid) 如果數值 arr[mid] 大於 目標，將右指針移動到 mid-1 如果數值 arr[mid] 小於 目標，將左指針移動到 mid+1 如果數值 arr[mid] 等於 目標，回傳答案 class Solution { public: int search(vector&amp;lt;int&amp;gt;&amp;amp; arr, int target) { sort(arr.begin(), arr.end()); int Lptr = 0, Rptr = (int)arr.size()-1; while(Lptr &amp;lt;= Rptr) { long long mid = (Lptr + Rptr) / 2; if(arr[mid] == target) return mid; else if(arr[mid] &amp;lt; target) Lptr = mid + 1; else Rptr = mid - 1; } return -1; } }; 線性搜尋尋 $O(n)$ 線性搜尋實作</description>
    </item>
    
    <item>
      <title>Line Bot</title>
      <link>https://vincent-s-blog.web.app/projects/line_bot/</link>
      <pubDate>Wed, 02 Aug 2023 15:41:48 +0800</pubDate>
      
      <guid>https://vincent-s-blog.web.app/projects/line_bot/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
